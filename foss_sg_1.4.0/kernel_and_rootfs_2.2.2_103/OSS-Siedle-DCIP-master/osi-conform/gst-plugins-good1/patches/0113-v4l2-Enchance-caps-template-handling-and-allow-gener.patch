From: Enrico Jorns <ejo@pengutronix.de>
Date: Tue, 27 Jan 2015 16:34:33 +0100
Subject: [PATCH] v4l2: Enchance caps template handling and allow generic
 encoder elements

* Register specified caps template for specialized encoder classes
  (gstv4l2h264enc.c) instead of only propagating caps in custom
  handle_frame method

* Derive outcaps in gstv4l2videoenc base class by querying src pad peer
  caps filtered by encoders respective template caps
---
 sys/v4l2/gstv4l2h264enc.c  | 52 ++++++++++++++++++++--------------------------
 sys/v4l2/gstv4l2videoenc.c | 21 +++++++++++++------
 sys/v4l2/gstv4l2videoenc.h |  3 ---
 3 files changed, 37 insertions(+), 39 deletions(-)

diff --git a/sys/v4l2/gstv4l2h264enc.c b/sys/v4l2/gstv4l2h264enc.c
index 846073df385f..f8ad29fd7bb7 100644
--- a/sys/v4l2/gstv4l2h264enc.c
+++ b/sys/v4l2/gstv4l2h264enc.c
@@ -48,29 +48,7 @@ enum
 G_DEFINE_ABSTRACT_TYPE (GstV4l2H264Enc, gst_v4l2_h264_enc,
     GST_TYPE_V4L2_VIDEO_ENC);
 
-static GstFlowReturn
-gst_v4l2_h264_enc_handle_frame (GstVideoEncoder * encoder,
-    GstVideoCodecFrame * frame)
-{
-  GstV4l2H264Enc *self = GST_V4L2_H264_ENC (encoder);
-  GstV4l2VideoEnc *parent = GST_V4L2_VIDEO_ENC (encoder);
-  GstFlowReturn ret = GST_FLOW_OK;
-  GstStructure *structure;
-  GstCaps *outcaps;
-
-  if (G_UNLIKELY (!GST_V4L2_IS_ACTIVE (parent->v4l2capture))) {
-    outcaps = gst_caps_new_empty_simple ("video/x-h264");
-    structure = gst_caps_get_structure (outcaps, 0);
-    gst_structure_set (structure, "stream-format",
-        G_TYPE_STRING, "byte-stream", NULL);
-    gst_structure_set (structure, "alignment", G_TYPE_STRING, "au", NULL);
-    return GST_V4L2_VIDEO_ENC_CLASS (parent_class)->handle_frame
-        (encoder, frame, outcaps);
-  }
-
-  return GST_V4L2_VIDEO_ENC_CLASS (parent_class)->handle_frame
-      (encoder, frame, NULL);
-}
+static GstCaps *gst_v4l2_h264_get_caps (void);
 
 static void
 gst_v4l2_h264_enc_init (GstV4l2H264Enc * self)
@@ -82,16 +60,10 @@ static void
 gst_v4l2_h264_enc_class_init (GstV4l2H264EncClass * klass)
 {
   GstElementClass *element_class;
-  GObjectClass *gobject_class;
-  GstV4l2VideoEncClass *v4l2_encoder_class;
-  GstVideoEncoderClass *baseclass;
 
   parent_class = g_type_class_peek_parent (klass);
 
   element_class = (GstElementClass *) klass;
-  gobject_class = (GObjectClass *) klass;
-  v4l2_encoder_class = GST_V4L2_VIDEO_ENC_CLASS (klass);
-  baseclass = GST_VIDEO_ENCODER_CLASS (klass);
 
   GST_DEBUG_CATEGORY_INIT (gst_v4l2_h264_enc_debug, "v4l2h264enc", 0,
       "V4L2 H.264 Encoder");
@@ -101,8 +73,28 @@ gst_v4l2_h264_enc_class_init (GstV4l2H264EncClass * klass)
       "Codec/Encoder/Video",
       "Encode H.264 video streams via V4L2 API", "ayaka <ayaka@soulik.info>");
 
+  gst_element_class_add_pad_template (element_class,
+      gst_pad_template_new ("src", GST_PAD_SRC, GST_PAD_ALWAYS,
+          gst_v4l2_h264_get_caps ()));
+
   /* FIXME propose_allocation or not ? */
-  baseclass->handle_frame = GST_DEBUG_FUNCPTR (gst_v4l2_h264_enc_handle_frame);
+}
+
+static GstCaps *
+gst_v4l2_h264_get_caps (void)
+{
+  static GstCaps *caps = NULL;
+  GstStructure *structure;
+
+  if (caps == NULL) {
+    caps = gst_caps_new_empty_simple ("video/x-h264");
+    structure = gst_caps_get_structure (caps, 0);
+    gst_structure_set (structure, "stream-format",
+        G_TYPE_STRING, "byte-stream", NULL);
+    gst_structure_set (structure, "alignment", G_TYPE_STRING, "au", NULL);
+  }
+
+  return gst_caps_ref (caps);
 }
 
 /* Probing functions */
diff --git a/sys/v4l2/gstv4l2videoenc.c b/sys/v4l2/gstv4l2videoenc.c
index 9fafa95713d5..553d8c037094 100644
--- a/sys/v4l2/gstv4l2videoenc.c
+++ b/sys/v4l2/gstv4l2videoenc.c
@@ -442,14 +442,14 @@ gst_v4l2_video_enc_loop_stopped (GstV4l2VideoEnc * self)
 
 static GstFlowReturn
 gst_v4l2_video_enc_handle_frame (GstVideoEncoder * encoder,
-    GstVideoCodecFrame * frame, GstCaps * outcaps)
+    GstVideoCodecFrame * frame)
 {
   GstV4l2VideoEnc *self = GST_V4L2_VIDEO_ENC (encoder);
   GstFlowReturn ret = GST_FLOW_OK;
   GstStructure *structure;
   GstVideoCodecState *output_state;
-
-  GST_DEBUG_OBJECT (self, "Handling frame %d", frame->system_frame_number);
+  GstCaps *tcaps, *outcaps;
+  GstCaps *intersect;
 
   if (G_UNLIKELY (!g_atomic_int_get (&self->active)))
     goto flushing;
@@ -461,10 +461,16 @@ gst_v4l2_video_enc_handle_frame (GstVideoEncoder * encoder,
       goto not_negotiated;
   }
 
-  if (NULL != outcaps) {
+  if (G_UNLIKELY (!GST_V4L2_IS_ACTIVE (self->v4l2capture))) {
     GstBufferPool *pool = GST_BUFFER_POOL (self->v4l2output->pool);
     GstStructure *structure;
 
+    tcaps = gst_pad_template_get_caps (gst_element_class_get_pad_template
+        (GST_ELEMENT_CLASS (G_OBJECT_GET_CLASS (encoder)), "src"));
+
+    outcaps = gst_pad_peer_query_caps (encoder->srcpad, tcaps);
+    gst_caps_unref (tcaps);
+
     output_state =
         gst_video_encoder_set_output_state (encoder, outcaps,
         self->input_state);
@@ -476,7 +482,9 @@ gst_v4l2_video_enc_handle_frame (GstVideoEncoder * encoder,
     gst_structure_set (structure, "height", G_TYPE_INT,
         output_state->info.height, NULL);
 
-    gst_v4l2_object_set_format (self->v4l2capture, outcaps);
+    gst_v4l2_object_set_format (self->v4l2capture, output_state->caps);
+
+    gst_caps_unref (outcaps);
 
     if (!gst_buffer_pool_is_active (pool)) {
       guint min, max;
@@ -811,7 +819,8 @@ gst_v4l2_video_enc_class_init (GstV4l2VideoEncClass * klass)
   video_encoder_class->sink_event =
       GST_DEBUG_FUNCPTR (gst_v4l2_video_enc_sink_event);
   /* FIXME propose_allocation or not ? */
-  klass->handle_frame = GST_DEBUG_FUNCPTR (gst_v4l2_video_enc_handle_frame);
+  video_encoder_class->handle_frame =
+      GST_DEBUG_FUNCPTR (gst_v4l2_video_enc_handle_frame);
 
   element_class->change_state =
       GST_DEBUG_FUNCPTR (gst_v4l2_video_enc_change_state);
diff --git a/sys/v4l2/gstv4l2videoenc.h b/sys/v4l2/gstv4l2videoenc.h
index 32ec61153394..10d877011b5a 100644
--- a/sys/v4l2/gstv4l2videoenc.h
+++ b/sys/v4l2/gstv4l2videoenc.h
@@ -71,9 +71,6 @@ struct _GstV4l2VideoEncClass
   GstVideoEncoderClass parent_class;
 
   gchar *default_device;
-
-    GstFlowReturn (*handle_frame) (GstVideoEncoder * encoder,
-      GstVideoCodecFrame * frame, GstCaps * outcaps);
 };
 
 GType gst_v4l2_video_enc_get_type (void);
