From: Enrico Jorns <ejo@pengutronix.de>
Date: Wed, 28 Jan 2015 08:58:26 +0100
Subject: [PATCH] v4l2: Remove definition and usage of LOG_CAPS macro

Unlike former definitions of LOG_CAPS current implementation simply
expands to GST_DEBUG_OBJECT. But there are several plaes in the code
containing boath a GST_DEBUG_OBJECT and a LOG_CAPS line.
This seems to be redundant and might unnecessarily further complicate
the reading of debug logs.

This patch entirely removes the (rarely used) LOG_CAPS macro.
---
 sys/v4l2/gstv4l2object.c | 1 -
 sys/v4l2/gstv4l2sink.c   | 2 +-
 sys/v4l2/gstv4l2src.c    | 5 -----
 sys/v4l2/v4l2_calls.h    | 2 --
 4 files changed, 1 insertion(+), 9 deletions(-)

diff --git a/sys/v4l2/gstv4l2object.c b/sys/v4l2/gstv4l2object.c
index 5d1f378925a0..1e5e8da4e881 100644
--- a/sys/v4l2/gstv4l2object.c
+++ b/sys/v4l2/gstv4l2object.c
@@ -3839,7 +3839,6 @@ gst_v4l2_object_get_caps (GstV4l2Object * v4l2object, GstCaps * filter)
   }
 
   GST_INFO_OBJECT (v4l2object->element, "probed caps: %" GST_PTR_FORMAT, ret);
-  LOG_CAPS (v4l2object->element, ret);
 
   return ret;
 }
diff --git a/sys/v4l2/gstv4l2sink.c b/sys/v4l2/gstv4l2sink.c
index ae4a3c243829..470ad41a0571 100644
--- a/sys/v4l2/gstv4l2sink.c
+++ b/sys/v4l2/gstv4l2sink.c
@@ -497,7 +497,7 @@ gst_v4l2sink_set_caps (GstBaseSink * bsink, GstCaps * caps)
   GstV4l2Sink *v4l2sink = GST_V4L2SINK (bsink);
   GstV4l2Object *obj = v4l2sink->v4l2object;
 
-  LOG_CAPS (v4l2sink, caps);
+  GST_DEBUG_OBJECT (v4l2sink, "caps: %" GST_PTR_FORMAT, caps);
 
   if (!GST_V4L2_IS_OPEN (obj)) {
     GST_DEBUG_OBJECT (v4l2sink, "device is not open");
diff --git a/sys/v4l2/gstv4l2src.c b/sys/v4l2/gstv4l2src.c
index a6d34b1d4c56..2ee431cf1bf6 100644
--- a/sys/v4l2/gstv4l2src.c
+++ b/sys/v4l2/gstv4l2src.c
@@ -298,7 +298,6 @@ gst_v4l2src_negotiate (GstBaseSrc * basesrc)
   /* first see what is possible on our source pad */
   thiscaps = gst_pad_query_caps (GST_BASE_SRC_PAD (basesrc), NULL);
   GST_DEBUG_OBJECT (basesrc, "caps of src: %" GST_PTR_FORMAT, thiscaps);
-  LOG_CAPS (basesrc, thiscaps);
 
   /* nothing or anything is allowed, we're done */
   if (thiscaps == NULL || gst_caps_is_any (thiscaps))
@@ -307,7 +306,6 @@ gst_v4l2src_negotiate (GstBaseSrc * basesrc)
   /* get the peer caps without a filter as we'll filter ourselves later on */
   peercaps = gst_pad_peer_query_caps (GST_BASE_SRC_PAD (basesrc), NULL);
   GST_DEBUG_OBJECT (basesrc, "caps of peer: %" GST_PTR_FORMAT, peercaps);
-  LOG_CAPS (basesrc, peercaps);
   if (peercaps && !gst_caps_is_any (peercaps)) {
     GstCaps *icaps = NULL;
     int i;
@@ -318,7 +316,6 @@ gst_v4l2src_negotiate (GstBaseSrc * basesrc)
       GstCaps *ipcaps = gst_caps_copy_nth (peercaps, i);
 
       GST_DEBUG_OBJECT (basesrc, "peer: %" GST_PTR_FORMAT, ipcaps);
-      LOG_CAPS (basesrc, ipcaps);
 
       icaps = gst_caps_intersect (thiscaps, ipcaps);
       gst_caps_unref (ipcaps);
@@ -331,7 +328,6 @@ gst_v4l2src_negotiate (GstBaseSrc * basesrc)
     }
 
     GST_DEBUG_OBJECT (basesrc, "intersect: %" GST_PTR_FORMAT, icaps);
-    LOG_CAPS (basesrc, icaps);
     if (icaps) {
       /* If there are multiple intersections pick the one with the smallest
        * resolution strictly bigger then the first peer caps */
@@ -382,7 +378,6 @@ gst_v4l2src_negotiate (GstBaseSrc * basesrc)
     if (!gst_caps_is_empty (caps)) {
       caps = gst_v4l2src_fixate (basesrc, caps);
       GST_DEBUG_OBJECT (basesrc, "fixated to: %" GST_PTR_FORMAT, caps);
-      LOG_CAPS (basesrc, caps);
 
       if (gst_caps_is_any (caps)) {
         /* hmm, still anything, so element can do anything and
diff --git a/sys/v4l2/v4l2_calls.h b/sys/v4l2/v4l2_calls.h
index 0437ebf397ee..6f32d6ed5ab4 100644
--- a/sys/v4l2/v4l2_calls.h
+++ b/sys/v4l2/v4l2_calls.h
@@ -135,6 +135,4 @@ gboolean	gst_v4l2_set_controls		(GstV4l2Object * v4l2object,
 gboolean        gst_v4l2_get_capabilities       (GstV4l2Object * v4l2object);
 
 
-#define LOG_CAPS(obj, caps) GST_DEBUG_OBJECT (obj, "%s: %" GST_PTR_FORMAT, #caps, caps)
-
 #endif /* __V4L2_CALLS_H__ */
