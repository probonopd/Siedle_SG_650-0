From: Philipp Zabel <p.zabel@pengutronix.de>
Date: Wed, 7 Jan 2015 14:01:17 +0100
Subject: [PATCH] pinctrl: imx: register gpr syscon

The general purpose registers at the start of the iomuxc register space
are handled by syscon. Since syscon doesn't need its own struct device
anymore, register it with the iomuxc device created by the pinctrl driver.

Signed-off-by: Philipp Zabel <p.zabel@pengutronix.de>
---
 drivers/pinctrl/freescale/pinctrl-imx6dl.c | 7 +++++++
 drivers/pinctrl/freescale/pinctrl-imx6q.c  | 7 +++++++
 2 files changed, 14 insertions(+)

diff --git a/drivers/pinctrl/freescale/pinctrl-imx6dl.c b/drivers/pinctrl/freescale/pinctrl-imx6dl.c
index 6805c678c3b2..85bbd5659931 100644
--- a/drivers/pinctrl/freescale/pinctrl-imx6dl.c
+++ b/drivers/pinctrl/freescale/pinctrl-imx6dl.c
@@ -13,6 +13,7 @@
 #include <linux/of.h>
 #include <linux/of_device.h>
 #include <linux/pinctrl/pinctrl.h>
+#include <linux/mfd/syscon.h>
 
 #include "pinctrl-imx.h"
 
@@ -467,6 +468,12 @@ static const struct of_device_id imx6dl_pinctrl_of_match[] = {
 
 static int imx6dl_pinctrl_probe(struct platform_device *pdev)
 {
+	struct device_node *syscon_np;
+
+	syscon_np = of_find_compatible_node(NULL, NULL, "fsl,imx6q-iomuxc-gpr");
+	if (syscon_np)
+		syscon_register(&pdev->dev, syscon_np);
+
 	return imx_pinctrl_probe(pdev, &imx6dl_pinctrl_info);
 }
 
diff --git a/drivers/pinctrl/freescale/pinctrl-imx6q.c b/drivers/pinctrl/freescale/pinctrl-imx6q.c
index 4d1fcb861ac1..74a68eca6864 100644
--- a/drivers/pinctrl/freescale/pinctrl-imx6q.c
+++ b/drivers/pinctrl/freescale/pinctrl-imx6q.c
@@ -15,6 +15,7 @@
 #include <linux/err.h>
 #include <linux/init.h>
 #include <linux/io.h>
+#include <linux/mfd/syscon.h>
 #include <linux/module.h>
 #include <linux/of.h>
 #include <linux/of_device.h>
@@ -473,6 +474,12 @@ static const struct of_device_id imx6q_pinctrl_of_match[] = {
 
 static int imx6q_pinctrl_probe(struct platform_device *pdev)
 {
+	struct device_node *syscon_np;
+
+	syscon_np = of_find_compatible_node(NULL, NULL, "fsl,imx6q-iomuxc-gpr");
+	if (syscon_np)
+		syscon_register(&pdev->dev, syscon_np);
+
 	return imx_pinctrl_probe(pdev, &imx6q_pinctrl_info);
 }
 
