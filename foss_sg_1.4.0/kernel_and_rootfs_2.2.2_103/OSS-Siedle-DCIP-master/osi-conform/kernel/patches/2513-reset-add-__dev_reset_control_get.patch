From: Philipp Zabel <p.zabel@pengutronix.de>
Date: Fri, 5 Feb 2016 13:41:39 +0100
Subject: [PATCH] reset: add __dev_reset_control_get

Signed-off-by: Philipp Zabel <p.zabel@pengutronix.de>
---
 drivers/reset/core.c  | 11 +++++++++--
 include/linux/reset.h |  8 +++++---
 2 files changed, 14 insertions(+), 5 deletions(-)

diff --git a/drivers/reset/core.c b/drivers/reset/core.c
index e37fe3636049..c500d760288a 100644
--- a/drivers/reset/core.c
+++ b/drivers/reset/core.c
@@ -281,6 +281,14 @@ struct reset_control *__of_reset_control_get(struct device_node *node,
 }
 EXPORT_SYMBOL_GPL(__of_reset_control_get);
 
+struct reset_control *__dev_reset_control_get(struct device *dev,
+				     const char *id, int index, int shared)
+{
+	return __of_reset_control_get(dev ? dev->of_node : NULL,
+				      id, index, shared);
+}
+EXPORT_SYMBOL_GPL(__dev_reset_control_get);
+
 /**
  * reset_control_put - free the reset controller
  * @rstc: reset controller
@@ -312,8 +320,7 @@ struct reset_control *__devm_reset_control_get(struct device *dev,
 	if (!ptr)
 		return ERR_PTR(-ENOMEM);
 
-	rstc = __of_reset_control_get(dev ? dev->of_node : NULL,
-				      id, index, shared);
+	rstc = __dev_reset_control_get(dev, id, index, shared);
 	if (!IS_ERR(rstc)) {
 		*ptr = rstc;
 		devres_add(dev, ptr);
diff --git a/include/linux/reset.h b/include/linux/reset.h
index cb35e83e0279..07f7e61ec167 100644
--- a/include/linux/reset.h
+++ b/include/linux/reset.h
@@ -14,6 +14,8 @@ int reset_control_status(struct reset_control *rstc);
 
 struct reset_control *__of_reset_control_get(struct device_node *node,
 				     const char *id, int index, int shared);
+struct reset_control *__dev_reset_control_get(struct device *dev,
+				     const char *id, int index, int shared);
 void reset_control_put(struct reset_control *rstc);
 struct reset_control *__devm_reset_control_get(struct device *dev,
 				     const char *id, int index, int shared);
@@ -93,13 +95,13 @@ static inline struct reset_control *__must_check reset_control_get(
 #ifndef CONFIG_RESET_CONTROLLER
 	WARN_ON(1);
 #endif
-	return __of_reset_control_get(dev ? dev->of_node : NULL, id, 0, 0);
+	return __dev_reset_control_get(dev, id, 0, 0);
 }
 
 static inline struct reset_control *reset_control_get_optional(
 					struct device *dev, const char *id)
 {
-	return __of_reset_control_get(dev ? dev->of_node : NULL, id, 0, 0);
+	return __dev_reset_control_get(dev, id, 0, 0);
 }
 
 /**
@@ -115,7 +117,7 @@ static inline struct reset_control *reset_control_get_optional(
 static inline struct reset_control *reset_control_get_shared(
 					struct device *dev, const char *id)
 {
-	return __of_reset_control_get(dev ? dev->of_node : NULL, id, 0, 1);
+	return __dev_reset_control_get(dev, id, 0, 1);
 }
 
 /**
