From: Robert Schwebel <r.schwebel@pengutronix.de>
Subject: [patch] remove old non-cross build system

Remove the old build system which is not able to cross build the tools.
This patch is a preparation for a next patch which adds an autotool
based set of build scripts.

Signed-off-by: Robert Schwebel <r.schwebel@pengutronix.de>

---
 Makefile               |   91 ----------
 bogl/Makefile          |  120 -------------
 example-theme/Makefile |   29 ---
 svgalib/Makefile       |  445 -------------------------------------------------
 svgalib/gl/Makefile    |   78 --------
 svgalib/src/Makefile   |  445 -------------------------------------------------
 6 files changed, 1208 deletions(-)

Index: b/Makefile
===================================================================
--- a/Makefile
+++ /dev/null
@@ -1,91 +0,0 @@
-CC=gcc
-CFLAGS=-g -Wall -fPIC
-LDFLAGS=
-CPPFLAGS=-D_GNU_SOURCE
-INCLUDES=-Ibogl
-
-COMPILE = $(CC) $(CPPFLAGS) $(INCLUDES) $(CFLAGS)
-LINK = $(CC) $(CFLAGS) $(LDFLAGS)
-
-INSTALL = /usr/bin/install -c
-INSTALL_DATA = $(INSTALL) -m 644
-INSTALL_PROGRAM = $(INSTALL) -m 755
-
-
-TARGETS = usplash usplash_write
-
-usplash_BACKEND_LDFLAGS = -ldl
-
-ifeq ($(BACKEND), svga)
-	BACKEND_dir = bogl svgalib
-	usplash_BACKEND = usplash_svga.o usplash_bogl.o
-	usplash_BACKEND_LIBS = svgalib/staticlib/libvgagl.a svgalib/staticlib/libvga.a bogl/libbogl.a
-	usplash_BACKEND_LDFLAGS += -lx86
-	CFLAGS += -DSVGA
-else
-	BACKEND_dir = bogl
-	usplash_BACKEND = usplash_bogl.o
-	usplash_BACKEND_LIBS = bogl/libbogl.a
-endif
-
-all: $(BACKEND_dir) $(TARGETS)
-
-libusplash_OBJECTS = libusplash.o usplash-testcard.o usplash-testcard-theme.o $(usplash_BACKEND) bogl/helvB10.o
-usplash_LIBS = 
-
-usplash: libusplash.so usplash.c
-	$(COMPILE) -c usplash.c -o usplash.o
-	$(LINK) -o $@ usplash.o -L. -lusplash
-
-libusplash.so.0: $(libusplash_OBJECTS) $(usplash_BACKEND_LIBS)
-	$(CC) -Wl,-soname=$@ -shared -o $@ $^ $(usplash_BACKEND_LDFLAGS)
-
-libusplash.so: libusplash.so.0
-	ln -sf $< $@
-
-usplash_write_OBJECTS = usplash_write.o
-
-usplash_write: $(usplash_write_OBJECTS)
-	$(LINK) -o $@ $^
-
-
-bogl:
-	$(MAKE) -C bogl
-
-svgalib:
-	$(MAKE) -C svgalib
-
-.c.o:
-	$(COMPILE) -o $@ -c $<
-
-.png.c:
-	./bogl/pngtobogl $< > $@
-
-.bdf.c:
-	./bogl/bdftobogl $< > $@
-
-
-install:
-	$(INSTALL) -d $(DESTDIR)/sbin $(DESTDIR)/usr/sbin $(DESTDIR)/lib $(DESTDIR)/usr/include $(DESTDIR)/usr/bin
-	$(INSTALL_PROGRAM) usplash $(DESTDIR)/sbin
-	$(INSTALL_PROGRAM) usplash_write $(DESTDIR)/sbin
-	$(INSTALL_PROGRAM) usplash_down $(DESTDIR)/sbin
-	$(INSTALL_PROGRAM) update-usplash-theme $(DESTDIR)/usr/sbin
-	$(INSTALL_PROGRAM) libusplash.so.0 $(DESTDIR)/lib/libusplash.so.0
-	ln -sf /lib/libusplash.so.0 $(DESTDIR)/lib/libusplash.so
-	$(INSTALL_PROGRAM) bogl/pngtobogl $(DESTDIR)/usr/bin/pngtousplash
-	$(INSTALL_PROGRAM) bogl/bdftobogl $(DESTDIR)/usr/bin/bdftousplash
-	$(INSTALL_DATA) usplash-theme.h $(DESTDIR)/usr/include/usplash-theme.h
-	$(INSTALL_DATA) usplash_backend.h $(DESTDIR)/usr/include/usplash_backend.h
-	$(INSTALL_DATA) libusplash.h $(DESTDIR)/usr/include/libusplash.h
-
-clean:
-	-$(MAKE) -C bogl clean
-	-$(MAKE) -C svgalib clean
-	-rm -f $(TARGETS) $(usplash_OBJECTS) $(usplash_write_OBJECTS) libusplash.so*
-	-rm -f *~	
-	-rm -f *.o
-
-
-.PHONY: all bogl svgalib install clean
-.SUFFIXES: .png .bdf
Index: b/bogl/Makefile
===================================================================
--- a/bogl/Makefile
+++ /dev/null
@@ -1,120 +0,0 @@
-LIBS = -lc
-LIB = libbogl.a
-DEVLINK = libbogl.so
-SONAME = libbogl.so.0
-SHARED_LIB = libbogl.so.0.1
-
-CFLAGS = -O2 -g -D_GNU_SOURCE -fPIC -I../
-WARNCFLAGS += -Wall -D_GNU_SOURCE
-ALLCFLAGS = $(CFLAGS) $(WARNCFLAGS) $(FBCFLAGS)
-
-architecture := $(shell dpkg-architecture -qDEB_BUILD_ARCH_CPU)
-
-LIBOBJECTS = $(LIBBOGLOBJECTS) $(LIBBOMLOBJECTS) $(LIBBOWLOBJECTS)	\
-	$(LIBRSRCOBJECTS)
-LIBBOGLOBJECTS = bogl.o bogl-font.o
-LIBBOMLOBJECTS = arrow.o boml.o
-LIBBOWLOBJECTS = bowl.o symbol.o
-LIBRSRCOBJECTS = helvB10.o helvB12.o helvR10.o timBI18.o tux75.o
-
-SOURCES_DEP = arrow.c bdftobogl.c bogl-cfb.c bogl-cfb.h bogl-cfb8.c	\
-bogl-cfb8.h bogl-font.c bogl-font.h bogl-pcfb.c bogl-pcfb.h		\
-bogl-tcfb.c bogl-tcfb.h bogl-test.c bogl.c bogl.h boglP.h boml.c	\
-boml.h bowl-boxes.c bowl.c bowl.h pngtobogl.c
-
-ifeq (,)
-	FBCFLAGS += -DBOGL_CFB_FB=1
-	LIBBOGLOBJECTS += bogl-cfb.o bogl-pcfb.o bogl-tcfb.o
-endif
-
-ifneq (,$(filter i386 i486 arm ia64 amd64,$(architecture)))
-	FBCFLAGS += -DBOGL_VGA16_FB=1
-	LIBBOGLOBJECTS += bogl-vga16.o
-	SOURCES_DEP += bogl-vga16.c bogl-vga16.h
-endif
-
-OBJECTS = $(LIBOBJECTS) bowl-boxes.o
-
-GENERATED = helvB10.c helvB12.c helvR10.c timBI18.c tux75.c
-
-#		 libutf8/libutf8_plug.so unifont-reduced.bgf
-all:    depend $(SHARED_LIB) $(LIB) bterm bdftobogl reduce-font
-
-%.lo: %.c
-	$(CC) $(ALLCFLAGS) -o $@ -fPIC -c $<
-
-%.o: %.c
-	$(CC) $(ALLCFLAGS) -o $@ -c $<
-
-$(SHARED_LIB): $(OBJECTS:%.o=%.lo)
-	$(CC) -shared -Wl,-soname,$(SONAME) -o $(SHARED_LIB) $(OBJECTS:%.o=%.lo)
-
-# unifont-reduced.bgf: bdftobogl unifont-reduced.bdf
-#	./bdftobogl -b unifont-reduced.bdf > unifont-reduced.bgf
-
-# unifont-reduced.bdf: ../bf-utf/unifont.bdf ../all.utf libutf8/libutf8_plug.so reduce-font
-#	LD_PRELOAD=./libutf8/libutf8_plug.so LC_CTYPE=C.UTF-8 ./reduce-font $< < ../all.utf > $@
-
-# ../all.utf: ../po.utf ../rn.utf $(xml_files)
-#	cat $^ > $@
-
-# ../po.utf:
-#	$(MAKE) -C ../dbootstrap/po all-po-utf
-#	cat ../dbootstrap/po/utf/*.po > $@
-
-# ../rn.utf:
-#	$(MAKE) RN_TARGET_DIR=. -C ../../scripts/rootdisk/messages install-utf
-#	cat ../../scripts/rootdisk/messages/release_notes.* > $@
-
-reduce-font: reduce-font.c
-
-$(LIB): $(OBJECTS)
-	rm -f $(LIB)
-	ar rcs $(LIB) $(OBJECTS)
-
-bogl-test: $(LIB) bogl-test.c tux75.o
-	$(CC) $(ALLCFLAGS) -o bogl-test bogl-test.c tux75.o $(LIB)
-
-bowl-boxes: $(LIB)
-	$(CC) -DSTANDALONE_TEST $(ALLCFLAGS) bowl-boxes.c $(LIBOBJECTS) -o bowl-boxes
-
-bterm: $(LIB) bterm.o bogl-term.o bogl-bgf.o
-	$(CC) $+ $(LIB) -o bterm
-
-bdftobogl: $(LIBBOGLOBJECTS)
-%.c: %.bdf bdftobogl
-	./bdftobogl $< > $@
-
-pngtobogl: pngtobogl.o
-	$(CC) $(ALLCFLAGS) -o pngtobogl pngtobogl.o -lgd -lpng -lm
-%.c: %.png pngtobogl
-	./pngtobogl $< > $@
-
-depend: .depend
-.depend: $(SOURCES_DEP)
-	$(CPP) $(ALLCFLAGS) -M $(SOURCES_DEP) > .depend
-
-clean: 
-	rm -rf reduce-font bterm bdftobogl pngtobogl *.o $(GENERATED) *-test lang.h tmp.*.c bowl-boxes $(LIB) unifont-reduced.bgf unifont-reduced.bdf
-	rm -f $(OBJECTS:%.o=%.lo) $(SHARED_LIB)
-	rm -f .depend
-
-distclean: clean
-	rm -f $(LIB) .depend *~ .nfs*
-
-force:
-
-ifeq (.depend,$(wildcard .depend))
-include .depend
-endif
-
-install: all
-	install -d $(DESTDIR)/usr/lib $(DESTDIR)/usr/include/bogl $(DESTDIR)/usr/bin
-	install -m644 $(SHARED_LIB) $(DESTDIR)/usr/lib/$(SHARED_LIB)
-	ln -s $(SHARED_LIB) $(DESTDIR)/usr/lib/$(DEVLINK)
-	ln -s $(SHARED_LIB) $(DESTDIR)/usr/lib/$(SONAME)
-	install -m644 $(LIB) $(DESTDIR)/usr/lib/$(LIB)
-	install -m644 *.h $(DESTDIR)/usr/include/bogl
-	install -m755 bdftobogl mergebdf bterm pngtobogl reduce-font $(DESTDIR)/usr/bin
-	install -d $(DESTDIR)/usr/share/terminfo
-	tic -o$(DESTDIR)/usr/share/terminfo bterm.ti
Index: b/example-theme/Makefile
===================================================================
--- a/example-theme/Makefile
+++ /dev/null
@@ -1,29 +0,0 @@
-CC=gcc
-CFLAGS=-g -Wall -fPIC
-LDFLAGS=
-INCLUDES=
-
-COMPILE = $(CC) $(INCLUDES) $(CFLAGS)
-LINK = $(CC) $(CFLAGS) $(LDFLAGS)
-
-INSTALL = /usr/bin/install -c
-INSTALL_DATA = $(INSTALL) -m 644
-INSTALL_PROGRAM = $(INSTALL) -m 755
-
-eft-theme.so: eft_1024_576_cropped.png.c.o eft_1024_768.png.c.o eft_800_600.png.c.o throbber_fore.png.c.o throbber_back.png.c.o eft-theme.c.o helvB10.bdf.c.o
-	$(COMPILE) -shared -o $@ $^
-	
-%.png.c: %.png
-	pngtousplash $< > $@
-
-%.bdf.c: %.bdf
-	bdftousplash $< > $@
-
-%.c.o: %.c
-	$(COMPILE) -o $@ -c $<
-
-install:
-	$(INSTALL) -d $(DESTDIR)/usr/lib/usplash
-	$(INSTALL_PROGRAM) eft-theme.so $(DESTDIR)/usr/lib/usplash/eft-theme.so
-clean:
-	rm -f *.png.c *.bdf.c *.c.o *.so
Index: b/svgalib/Makefile
===================================================================
--- a/svgalib/Makefile
+++ /dev/null
@@ -1,445 +0,0 @@
-#---------------------------------------------------------------------OU
-# Makefile for SVGAlib.
-#
-# It's pretty unreadable, but just doing make install should be
-# enough. This will install the headerfiles and shared library first
-# (which is enough to compile things), after which the static version is
-# optionally compiled and installed (if it fails, the shared libraries
-# should still work fine).
-#
-#----------------------------------------------------------------------
-
-# *** NO SERVICIBLE PARTS HERE!
-#     All options are in Makefile.cfg.
-
-include Makefile.cfg
-
-#----------------------------------------------------------------------
-# Rules Section
-#----------------------------------------------------------------------
-
-JUMP_DIR=$(shell sh -c pwd)/jump/
-JUMP_LIB=libvga
-
-export JUMP_DIR
-export JUMP_LIB
-
-# Search the old directories for mkimage and mkstubs.
-# Make sure mkimage get the right "as" assembler.
-ifeq (a.out, $(TARGET_FORMAT))
-  PATH := /usr/i486-linuxaout/bin:$(PATH):/usr/dll/bin
-  export PATH
-endif	
-
-# In case someone goes for the demos w/o installing svgalib make
-# the static libs first.
-ifdef INSTALLSHAREDLIB
-  PREDEMO =
-else
-  PREDEMO = static
-endif
-
-# A flag if this is a distribution:
-DISTRIBUTION = $(shell sh -c "echo sharedlib/DIST*")
-INSTALLAOUTDIR =	
-
-ifeq (elf, $(TARGET_FORMAT))
-ifdef INSTALLAOUTLIB
-ifeq ($(DISTRIBUTION), sharedlib/DISTRIBUTION)
-	OBSOLETEAOUTDIRS = $(shell sed 's?\#.*$$??' /etc/ld.so.conf 2>/dev/null | \
-			     sed 's?\([^/]\)[ 	]*$$?\1/ ?' | grep aout/ )
-	INSTALLAOUTDIR = $(word 1, $(OBSOLETEAOUTDIRS))
-endif
-endif
-endif
-
-UTILS	= restorefont runx restorepalette restoretextmode textmode \
-	  savetextmode dumpreg fix132x43
-
-OBSOLETEHDIRS = /usr/include/ /usr/include/vga/ /usr/local/include/ /usr/local/include/vga/
-OBSOLETEBDIRS = /usr/bin/ /usr/local/bin/
-
-OBSOLETEHEADERS = /inc/vga.h /inc/vgakeyboard.h /inc/vgamouse.h /inc/vgagl.h /inc/vgajoystick.h
-
-OBSOLETELIBLINKS = /lib/libvga.so /lib/libvga.so.1 /lib/libvgagl.so /lib/libvgagl.so.1
-
-OBSOLETESHAREDIMAGES = /lib/libvgagl.so.* /lib/libvga.so.*
-
-ifeq (a.out, $(TARGET_FORMAT))
-	OBSOLETELDIRS = /lib/ /usr/lib/ /usr/local/lib/ /usr/share/lib/ \
-			$(shell sed 's?\#.*$$??' /etc/ld.so.conf 2>/dev/null | \
-			  sed 's?\([^/]\)[ 	]*$$?\1/ ?' )
-	SHAREDLIBS = sharedlib/libvga.so.$(VERSION)
-	SVGALIBSHAREDSTUBS = sharedlib/libvga.sa sharedlib/libvgagl.sa
-	JUMP = jump
-else	
-	OBSOLETELDIRS = /lib/ /usr/lib/ /usr/local/lib/ /usr/share/lib/ \
-			$(shell sed 's?\#.*$$??' /etc/ld.so.conf 2>/dev/null | \
-			  sed 's?\([^/]\)[ 	]*$$?\1/ ?' | grep -v aout/ )
-
-	SHAREDAOUTLIBS = sharedlib/libvga.so.$(VERSION)
-	SVGALIBSHAREDAOUTSTUBS = sharedlib/libvga.sa sharedlib/libvgagl.sa
-	SHAREDLIBS = sharedlib/libvga.so.$(VERSION) sharedlib/libvgagl.so.$(VERSION)
-	SVGALIBSHAREDSTUBS =
-	JUMP =
-endif	
-
-BACKUP   = ../svgalib-$(VERSION).tar.gz
-
-default: static
-
-.PHONY: default all install installheaders installconfig
-.PHONY: clean distclean indent uninstall
-.PHONY: force_remake remake_shared shared static
-.PHONY: indent-gnu configaout
-
-installheaders:
-	@echo Installing header files in $(includedir).
-	mkdir -p $(includedir)
-	@cp $(srcdir)/src/vga.h $(includedir)/vga.h
-	@chmod a+r $(includedir)/vga.h
-	@cp $(srcdir)/gl/vgagl.h $(includedir)/vgagl.h
-	@chmod a+r $(includedir)/vgagl.h
-	@cp $(srcdir)/src/mouse/vgamouse.h $(includedir)/vgamouse.h
-	@chmod a+r $(includedir)/vgamouse.h
-	@cp $(srcdir)/src/joystick/vgajoystick.h $(includedir)/vgajoystick.h
-	@chmod a+r $(includedir)/vgajoystick.h
-	@cp $(srcdir)/src/keyboard/vgakeyboard.h $(includedir)/vgakeyboard.h
-	@chmod a+r $(includedir)/vgakeyboard.h
-
-installsharedlib: $(SHAREDLIBS) $(SVGALIBSHAREDSTUBS)
-ifeq (a.out, $(TARGET_FORMAT))
-	@echo Installing shared library stubs in $(libdir).
-	-@for foo in $(notdir $(SVGALIBSHAREDSTUBS)); do \
-		$(INSTALL_DATA) sharedlib/$$foo $(libdir)/$$foo; \
-		chmod a+r $(libdir)/$$foo; \
-	done
-endif
-	mkdir -p $(sharedlibdir)
-	@echo Installing shared library image as \
-		$(addprefix $(sharedlibdir)/,$(notdir $(SHAREDLIBS))).
-	@for foo in $(notdir $(SHAREDLIBS)); do \
-		$(INSTALL_SHLIB) sharedlib/$$foo $(sharedlibdir)/$$foo; \
-		cp -d sharedlib/`echo $$foo | sed 's/\.so\..*/.so/'` $(sharedlibdir); \
-		cp -d sharedlib/`echo $$foo | sed 's/\.so\..*/.so/'`.$(MAJOR_VER) $(sharedlibdir); \
-	done
-
-ifdef INSTALLAOUTDIR
-
-installaoutcompat:
-	@echo Installing shared a.out compatibility library in $(TOPDIR)/$(INSTALLAOUTDIR).
-	@for foo in $(notdir $(SVGALIBSHAREDAOUTSTUBS)); do \
-		$(INSTALL_DATA) sharedlib/$$foo $(TOPDIR)/$(INSTALLAOUTDIR)$$foo; \
-	done
-	@echo Installing shared a.out library compat image as \
-		$(addprefix $(INSTALLAOUTDIR),$(notdir $(SHAREDLIBS))).
-	@for foo in $(notdir $(SHAREDAOUTLIBS)); do \
-		$(INSTALL_SHLIB) sharedlib/$$foo $(TOPDIR)/$(INSTALLAOUTDIR)$$foo; \
-		cp -d sharedlib/`echo $$foo | sed 's/\.so\..*/.so/'` $(sharedlibdir); \
-		cp -d sharedlib/`echo $$foo | sed 's/\.so\..*/.so/'`.$(MAJOR_VER) $(sharedlibdir); \
-	done
-
-else
-
-installaoutcompat:
-	@true
-
-endif
-
-installstaticlib: static
-	@echo Installing static libraries in $(libdir).
-	@$(INSTALL_DATA) staticlib/libvga.a $(libdir)/libvga.a
-	@chmod a+r $(libdir)/libvga.a
-	@$(INSTALL_DATA) staticlib/libvgagl.a $(libdir)/libvgagl.a
-	@chmod a+r $(libdir)/libvgagl.a
-
-installutils: textutils lrmi
-	@if [ ! -d $(bindir) ]; then \
-		echo No $(bindir) directory, creating it.; \
-		mkdir $(bindir); \
-	fi
-	@echo Installing textmode utilities in $(bindir):
-	@echo "restorefont:      Save/restore textmode font."
-	@cp utils/restorefont $(bindir)
-	@echo "restorepalette:   Set standard VGA palette."
-	@cp utils/restorepalette $(bindir)
-	@echo "dumpreg:          Write ASCII dump of SVGA registers."
-	@cp utils/dumpreg $(bindir)
-	@echo "restoretextmode:  Save/restore textmode registers."
-	@cp utils/restoretextmode $(bindir)
-	@echo "textmode:         Script that tries to restore textmode."
-	@cp utils/textmode $(bindir)
-	@echo "savetextmode:     Script that saves textmode information used by 'textmode'."
-	@cp utils/savetextmode $(bindir)
-	@echo "mode3:            Restore textmode by setting VESA mode 3."
-	@if [ -e lrmi-0.6m/mode3 ]; then cp lrmi-0.6m/mode3 $(bindir); fi
-	@echo "vga_reset:        Restore textmode by resetting graphic board."
-	@if [ -e lrmi-0.6m/vga_reset ]; then cp lrmi-0.6m/vga_reset $(bindir); fi
-	@echo "Installing keymap utilities in $(bindir):"
-	@echo "svgakeymap:       Perl script that generates scancode conversion maps."
-	@cp utils/svgakeymap $(bindir)
-
-installconfig:
-	@if [ ! -d $(datadir) ]; then \
-		echo Creating configuration directory $(datadir).; \
-		mkdir $(datadir); \
-		chmod go-w $(datadir); \
-	fi
-	@if [ \( -f /usr/local/lib/libvga.config -a ! -f $(datadir)/libvga.config \) ]; then \
-		echo "Moving old config file /usr/local/lib/libvga.config to $(datadir)." ; \
-		mv -f /usr/local/lib/libvga.config $(datadir)/libvga.config; \
-	fi
-	@if [ \( -f /usr/local/lib/libvga.et4000 -a ! -f $(datadir)/libvga.et4000 \) ]; then \
-		echo "Moving old config file /usr/local/lib/libvga.et4000 to $(datadir)." ; \
-		mv -f /usr/local/lib/libvga.et4000 $(datadir)/libvga.et4000; \
-	fi
-	@if [ \( -f /usr/local/lib/libvga.ega -a ! -f $(datadir)/libvga.ega \) ]; then \
-		echo "Moving old config file /usr/local/lib/libvga.ega to $(datadir)." ; \
-		mv -f /usr/local/lib/libvga.ega $(datadir)/libvga.ega; \
-	fi
-	@if [ \( -f /etc/mach32.eeprom -a ! -f $(datadir)/mach32.eeprom \) ]; then \
-		echo Consider moving your /etc/mach32.eeprom file to $(datadir) ; \
-		echo and changing $(datadir)/libvga.config appropriately. ; \
-	fi
-	@if [ ! -f $(datadir)/libvga.config ]; then \
-		echo Installing default configuration file in $(datadir).; \
-		cp $(confdir)/libvga.config $(datadir)/libvga.config; \
-	fi
-	@if [ ! -f $(datadir)/libvga.et4000 ]; then \
-		echo Installing dynamically loaded ET4000 registers in $(datadir).; \
-		cp $(confdir)/et4000.regs $(datadir)/libvga.et4000; \
-	fi
-	@if [ ! -f $(datadir)/default.keymap ]; then \
-		echo Installing default keymap file in $(datadir).; \
-		cp $(confdir)/default.keymap $(datadir)/null.keymap; \
-	fi
-	@if [ ! -f $(datadir)/dvorak-us.keymap ]; then \
-		echo Installing Dvorak keymap file in $(datadir).; \
-		cp $(confdir)/dvorak-us.keymap $(datadir)/dvorak-us.keymap; \
-	fi
-
-installman:
-	(cd doc; $(MAKE) -f $(srcdir)/doc/Makefile srcdir="$(srcdir)" install )
-	 
-install: uninstall $(INSTALLAOUTLIB) installheaders $(INSTALLSHAREDLIB) installconfig \
-	$(INSTALLSTATICLIB) $(INSTALLUTILS) $(INSTALLMAN)
-	@echo
-	@echo
-	@echo Now run "'make demoprogs'" to make the test and demo programs in
-	@echo demos/ and threedkit/.
-
-uninstall:
-	@echo "Removing textmode utilities..."
-	@for i in $(OBSOLETEBDIRS); do \
-          for prog in $(UTILS); do \
-            rm -f $$i$$prog ; \
-          done ; \
-         done
-	@echo "Removing shared library stubs (old & current)..."
-	@for i in $(OBSOLETELDIRS); do \
-	    rm -f `echo /lib/libvga.so.$(VERSION) /lib/libvgagl.so.$(VERSION) \
-			$(OBSOLETELIBLINKS) /lib/libvga.sa /lib/libvgagl.sa \
-		     | sed s?/lib/?$$i?g`; \
-         done
-ifndef KEEPSHAREDLIBS
-	@echo "Removing shared library images (old & current)..."
-	@for i in $(OBSOLETELDIRS); do \
-	    rm -f `echo $(OBSOLETESHAREDIMAGES) | sed s?/lib/?$$i?g`; \
-         done
-endif
-ifneq ($(INSTALLAOUTDIR), )
-	@echo "Removing shared a.out library stubs (old & current)..."
-	@for i in $(OBSOLETEAOUTDIRS); do \
-	    rm -f `echo /lib/libvga.so.$(VERSION) /lib/libvgagl.so.$(VERSION) \
-			$(OBSOLETELIBLINKS) /lib/libvga.sa /lib/libvgagl.sa \
-		     | sed s?/lib/?$$i?g`; \
-         done
-ifndef KEEPSHAREDLIBS
-	@echo "Removing shared a.out library images (old & current)..."
-	@for i in $(OBSOLETEAOUTDIRS); do \
-	    rm -f `echo $(OBSOLETESHAREDIMAGES) | sed s?/lib/?$$i?g`; \
-         done
-endif
-endif
-	@echo "Removing static libraries..."
-	@for i in $(OBSOLETELDIRS); do \
-	    rm -f `echo /lib/libvga.a /lib/libvgagl.a | sed s?/lib/?$$i?g`; \
-	done
-	@echo "Removing header files..."
-	@for i in $(OBSOLETEHDIRS); do \
-	    rm -f `echo $(OBSOLETEHEADERS) | sed s?/inc/?$$i?g`; \
-	done
-	(cd doc; $(MAKE) -f $(srcdir)/doc/Makefile srcdir="$(srcdir)" uninstall)
-	 
-
-SHAREDDIRS0 = sharedlib/mouse sharedlib/keyboard sharedlib/ramdac \
-		sharedlib/clockchip sharedlib/joystick sharedlib/x86emu
-SHAREDDIRS = $(SHAREDDIRS0) $(JUMP)
-STATICDIRS = staticlib/mouse staticlib/keyboard staticlib/ramdac \
-		staticlib/clockchip staticlib/joystick staticlib/x86emu
-UTILDIRS = utils
-DEMODIRS = demos threeDKit
-
-$(SHAREDDIRS0) $(STATICDIRS) $(DEMODIRS):
-	mkdir -p $@
-
-jump:
-	mkdir -p jump
-	if [ ! -f jump/jump.funcs ]; then \
-		cp $(srcdir)/jump/jump.funcs $(srcdir)/jump/jump.ignore \
-		   $(srcdir)/jump/jump.vars jump; \
-	fi
-
-utils:
-	mkdir -p utils
-	if [ ! -f utils/runx ]; then \
-		cp $(srcdir)/utils/runx $(srcdir)/utils/savetextmode \
-		   $(srcdir)/utils/textmode utils; \
-	fi
-
-static: staticlib/libvga.a staticlib/libvgagl.a
-
-.PHONY: staticlib/libvgagl.a staticlib/libvga.a
-
-staticlib/libvgagl.a staticlib/libvga.a: $(STATICDIRS)
-	(cd $(dir $@); \
-	 $(MAKE) -f $(srcdir)/src/Makefile $(notdir $@) \
-	 	srcdir="$(srcdir)" DLLFLAGS="" \
-	)
-
-ifeq (a.out, $(TARGET_FORMAT))
-
-shared: force_remake $(SHAREDLIBS) $(SVGALIBSHAREDSTUBS)
-
-force_remake:
-	@if [ -f sharedlib/DISTRIBUTION ] ; then \
-		rm -f sharedlib/DISTRIBUTION ; \
-		$(MAKE) shared; \
-	fi
-
-sharedlib/libsources:
-	@mkdir -p sharedlib
-	@echo sharedlib/libvga.a sharedlib/libvgagl.a >sharedlib/libsources
-
-ifeq ($(DISTRIBUTION), sharedlib/DISTRIBUTION)
-
-sharedlib/libvga.so.$(VERSION):
-	@echo "Ooops, this shouldn\'t happen.. I\'m going to fix it..."
-	@rm -f sharedlib/DISTRIBUTION
-	@$(MAKE) sharedlib/libvga.so.$(VERSION)
-
-else
-
-sharedlib/libvga.so.$(VERSION): sharedlib/libvga.a sharedlib/libvgagl.a
-	(cd sharedlib; \
-	 mkstubs -a 0x63b00000 -l libvga -v $(VERSION) -j 0x00001000 -g 4096 \
-		-- libvga; \
-	 mkstubs -a 0x63b00000 -l libvga -v $(VERSION) -j 0x00001000 -g 4096 \
-		-- libvgagl; \
-	 mkimage -a 0x63b00000 -l libvga -v $(VERSION) -j 0x00001000 -g 4096 \
-		-- $(MKIMAGEFLAGS) libvga.a libvgagl.a \
-		`$(CC) --print-libgcc-file-name` -lc -lm; \
-	 strip libvga.so.$(VERSION) \
-	)
-
-endif	# DISTRIBUTION
-
-sharedlib/libvga.a: $(SHAREDDIRS)
-	(cd $(dir $@); \
-	 $(MAKE) -f $(srcdir)/src/Makefile $(notdir $@) \
-	 	srcdir="$(srcdir)" DLLFLAGS="$(DLLFLAGS)" \
-	)
-
-else
-
-# ELF
-
-.PHONY: sharedlib/libvga.so.$(VERSION) sharedlib/libvgagl.so.$(VERSION)
-
-shared: $(SHAREDLIBS) $(SVGALIBSHAREDSTUBS)
-
-sharedlib/libvga.so.$(VERSION): $(SHAREDDIRS)
-	@rm -f sharedlib/DISTRIBUTION
-	(cd $(dir $@); \
-	 $(MAKE) -f $(srcdir)/src/Makefile $(notdir $@) \
-	 	srcdir="$(srcdir)" DLLFLAGS="$(DLLFLAGS)" \
-	)
-
-endif	# a.out
-
-sharedlib/libvgagl.a sharedlib/libvgagl.so.$(VERSION): $(SHAREDDIRS)
-	(cd $(dir $@); \
-	 $(MAKE) -f $(srcdir)/gl/Makefile $(notdir $@) \
-	 	srcdir="$(srcdir)" DLLFLAGS="$(DLLFLAGS)" \
-	)
-
-demoprogs: $(PREDEMO) $(DEMODIRS)
-	@for dir in $(DEMODIRS); do \
-		if [ -d $(srcdir)/$$dir ]; then \
-			(cd $$dir; \
-			$(MAKE) -f $(srcdir)/$$dir/Makefile srcdir="$(srcdir)"); \
-		fi; \
-	done
-
-textutils: $(UTILDIRS)
-	(cd utils; \
-	$(MAKE) -f $(srcdir)/utils/Makefile srcdir="$(srcdir)")
-
-lrmi:
-ifneq (y,$(NO_ASM))
-	(cd lrmi-0.6m;\
-	$(MAKE))
-endif
-
-backup: $(BACKUP)
-
-configaout:
-	@if grep '^TARGET_FORMAT = elf$$' $(srcdir)/Makefile.cfg >/dev/null; then \
-		$(MAKE) clean; \
-		sed 's/^TARGET_FORMAT = elf$$/# TARGET_FORMAT = elf/' \
-			$(srcdir)/Makefile.cfg | \
-		sed 's/^#[ 	]*TARGET_FORMAT = a.out$$/TARGET_FORMAT = a.out/' \
-			> mkcfg ; \
-		mv mkcfg $(srcdir)/Makefile.cfg; \
-		echo "Was configured for elf, rerunning make"; \
-		$(MAKE) clean backup; \
-		echo "Ignore this error message:"; \
-		exit 1; \
-	fi
-
-$(BACKUP): configaout
-# I tried using a dependency, but make reordered them
-# thus I have to do it this way:
-	$(MAKE) shared
-	$(MAKE) distclean
-
-	sed 's/^TARGET_FORMAT = a.out$$/# TARGET_FORMAT = a.out/' \
-		$(srcdir)/Makefile.cfg | \
-	sed 's/^#[ 	]*TARGET_FORMAT = elf$$/TARGET_FORMAT = elf/' \
-		> mkcfg ; \
-	mv mkcfg $(srcdir)/Makefile.cfg; \
-	(cd ..; \
-	find svgalib-$(VERSION) ! -type d -print | sort | tar -cvf- -T- ) \
-		| gzip -9 >$(BACKUP)
-
-distclean:
-	(cd $(srcdir)/src; $(MAKE) clean)
-	(cd $(srcdir)/gl; $(MAKE) clean)
-	find . \( -name '.depend*' -o -name '*~*' \) -exec rm {} \;
-	rm -rf sharedlib/[!l]* sharedlib/l[!i]* sharedlib/li[!b]* staticlib
-	rm -rf sharedlib/*.a
-	mkdir -p sharedlib
-	touch sharedlib/DISTRIBUTION
-
-clean: distclean
-	rm -rf sharedlib
-
-indent:
-	find demos gl mach src support -name '*.[ch]' -exec indent -kr {} \;
-	indent -kr src/*.regs
-
-indent-gnu:
-	find demos gl mach src support -name '*.[ch]' -exec indent -gnu {} \;
-	indent -gnu src/*.regs
-
-FORCE:
Index: b/svgalib/gl/Makefile
===================================================================
--- a/svgalib/gl/Makefile
+++ /dev/null
@@ -1,78 +0,0 @@
-#----------------------------------------------------------------------
-# Makefile for SVGAlib GL routines.
-#----------------------------------------------------------------------
-
-# *** NO SERVICIBLE PARTS HERE!
-#     All options are in Makefile.cfg.
-
-include ../Makefile.cfg
-
-srcdir    = ..
-VPATH     = $(srcdir)/gl
-
-INCLUDES += -I$(srcdir)/src
-
-ifeq (a.out, $(TARGET_FORMAT))
-  DEFINES += -DSVGA_AOUT
-endif
-
-ifeq (y, $(NO_ASM))
-  DEFINES += -DNO_ASSEMBLY
-endif
-
-#----------------------------------------------------------------------
-# Rules Section
-#----------------------------------------------------------------------
-
-MODULES	 = grlib.o driver.o line.o palette.o scale.o text.o font8x8.o \
-	   cbitmap.o mem.o 
-
-all:	libvgagl.a
-.PHONY: all clean dep
-
-libvgagl.so: libvgagl.so.$(VERSION)
-libvgagl.so.$(VERSION): $(MODULES)
-	$(CC) -s -shared -Wl,-soname,libvgagl.so.$(MAJOR_VER) -o libvgagl.so.$(VERSION) \
-	  $(MODULES) $(SHLIBLIBS) -L$(srcdir)/sharedlib -lvga
-	ln -sf libvgagl.so.$(VERSION) libvgagl.so
-	ln -sf libvgagl.so.$(VERSION) libvgagl.so.$(MAJOR_VER)
-
-libvgagl.a: $(MODULES)
-	rm -f libvgagl.a
-	$(AR) rcs libvgagl.a $(MODULES)
-
-.c.o:
-	$(CC) $(CFLAGS) -c -o $*.o $<
-
-.S.s:
-	$(CC) $(CFLAGS) -E $< >$@
-
-.s.o:
-	$(CC) $(CFLAGS) -c -o $*.o $<
-
-.c.s:
-	$(CC) $(CFLAGS) -S -o $*.s $<
-
-.o:
-	$(CC) $(CFLAGS) $(LDFLAGS) -o $* $*.o $(LIBS)
-	chmod 4755 $*
-
-$(MODULES): .depend.gl
-
-dep:
-	rm -f .depend.gl
-	make depend
-
-.depend.gl:
-	echo '# GL Module dependencies' >>.depend.gl
-	$(CC) $(INCLUDES) -MM $(patsubst %.o,$(srcdir)/gl/%.c,$(MODULES)) >>.depend.gl
-
-clean:
-	rm -f .depend.gl *.bak *.o *~ libvgagl.a libvgagl.so*
-
-#
-# include a dependency file if one exists
-#
-ifeq (.depend.gl,$(wildcard .depend.gl))
-include .depend.gl
-endif
Index: b/svgalib/src/Makefile
===================================================================
--- a/svgalib/src/Makefile
+++ /dev/null
@@ -1,445 +0,0 @@
-#----------------------------------------------------------------------
-# Makefile for the main svgalib source.
-#----------------------------------------------------------------------
-
-# *** NO SERVICIBLE PARTS HERE!
-#     All options are in Makefile.cfg.
-
-include ../Makefile.cfg
-
-srcdir    = ..
-VPATH     = $(srcdir)/src
-
-#----------------------------------------------------------------------
-# Compiler Section (overrides Makefile.cfg)
-#----------------------------------------------------------------------
-
-INCLUDES += -I$(srcdir)/src -I$(srcdir)/src/config
-
-#----------------------------------------------------------------------
-# Rules Section
-#----------------------------------------------------------------------
-
-DRIVERS = vgadrv.o modetab.o
-MODULES = vga.o \
-          vgadraw.o vgaclear.o vgaline.o vgapix.o \
-          vgapal.o vgacol.o vgamodesel.o vgamisc.o \
-	  vgadump.o vgaconvplanar.o vgaaccel.o \
-	  timing.o vgaregs.o interface.o accel.o \
-	  vgabgpage.o vgabgvt.o vgapci.o
-
-# defines for all files.
-ifeq (y, $(NO_ASM))
-  DEFINES += -DNO_ASSEMBLY
-endif
-ifdef SVGALIB_CONFIG_FILE
-  DEFINES += -DSVGALIB_CONFIG_FILE=\"$(SVGALIB_CONFIG_FILE)\"
-endif
-ifdef ALLOW_MOUSE_OVERRIDE
-  DEFINES += -DALLOW_MOUSE_OVERRIDE
-endif
-ifdef DEBUG_ACCEL
-  DEFINES += -DDEBUG_ACCEL
-endif
-ifdef DEBUG_KEYBOARD
-  DEFINES += -DDEBUG_KEYBOARD
-endif
-ifdef BACKGROUND
-  DEFINES += -DBACKGROUND=1
-endif
-ifeq (a.out, $(TARGET_FORMAT))
-  DEFINES += -DSVGA_AOUT
-endif
-
-# defines for vga.c only.
-ifdef ROOT_VC_SHORTCUT
-  VGA_DEFINES += -DROOT_VC_SHORTCUT
-endif
-
-ifdef DEBUG_CONF
-  DEFINES += -DDEBUG_CONF
-endif
-
-ifdef INCLUDE_ET4000_DRIVER
-  VGA_DEFINES += -DINCLUDE_ET4000_DRIVER
-  DRIVERS += et4000.o vgahico.o 
-  ifdef INCLUDE_ET4000_DRIVER_TEST
-    VGA_DEFINES += -DINCLUDE_ET4000_DRIVER_TEST
-  endif
-  ifdef ET4000_REGS
-    DEFINES += -DET4000_REGS=\"$(ET4000_REGS)\"
-  endif
-  ifdef USE_CLOCKS
-    DEFINES += -DUSE_CLOCKS
-  endif
-endif
-ifdef INCLUDE_CIRRUS_DRIVER
-  VGA_DEFINES += -DINCLUDE_CIRRUS_DRIVER
-  DRIVERS += cirrus.o
-  ifdef INCLUDE_CIRRUS_DRIVER_TEST
-    VGA_DEFINES += -DINCLUDE_CIRRUS_DRIVER_TEST
-  endif
-endif
-ifdef INCLUDE_TVGA_DRIVER
-  VGA_DEFINES += -DINCLUDE_TVGA_DRIVER
-  DRIVERS += tvga8900.o
-  ifdef INCLUDE_TVGA_DRIVER_TEST
-    VGA_DEFINES += -DINCLUDE_TVGA_DRIVER_TEST
-  endif
-endif
-ifdef INCLUDE_OAK_DRIVER
-  VGA_DEFINES += -DINCLUDE_OAK_DRIVER
-  DRIVERS += oak.o
-  ifdef INCLUDE_OAK_DRIVER_TEST
-    VGA_DEFINES += -DINCLUDE_OAK_DRIVER_TEST
-  endif
-endif
-ifdef INCLUDE_EGA_DRIVER
-  VGA_DEFINES += -DINCLUDE_EGA_DRIVER
-  DRIVERS += egadrv.o
-  ifdef INCLUDE_EGA_DRIVER_TEST
-    VGA_DEFINES += -DINCLUDE_EGA_DRIVER_TEST
-  endif
-  ifdef EGA_REGS
-    DEFINES += -DEGA_REGS=\"$(EGA_REGS)\"
-  endif
-endif
-ifdef INCLUDE_MACH32_DRIVER
-  VGA_DEFINES += -DINCLUDE_MACH32_DRIVER
-  DRIVERS += mach32.o
-  ifdef INCLUDE_MACH32_DRIVER_TEST
-    VGA_DEFINES += -DINCLUDE_MACH32_DRIVER_TEST
-  endif
-endif
-ifdef INCLUDE_S3_DRIVER
-  VGA_DEFINES += -DINCLUDE_S3_DRIVER
-  DRIVERS += s3.o
-  ifdef INCLUDE_S3_DRIVER_TEST
-    VGA_DEFINES += -DINCLUDE_S3_DRIVER_TEST
-  endif
-endif
-ifdef INCLUDE_ET3000_DRIVER
-  VGA_DEFINES += -DINCLUDE_ET3000_DRIVER
-  DRIVERS += et3000.o
-  ifdef INCLUDE_ET3000_DRIVER_TEST
-    VGA_DEFINES += -DINCLUDE_ET3000_DRIVER_TEST
-  endif
-endif
-ifdef INCLUDE_GVGA6400_DRIVER
-  VGA_DEFINES += -DINCLUDE_GVGA6400_DRIVER
-  DRIVERS += gvga6400.o
-  ifdef INCLUDE_GVGA6400_DRIVER_TEST
-    VGA_DEFINES += -DINCLUDE_GVGA6400_DRIVER_TEST
-  endif
-endif
-ifdef INCLUDE_ARK_DRIVER
-  VGA_DEFINES += -DINCLUDE_ARK_DRIVER
-  DRIVERS += ark.o
-  ifdef INCLUDE_ARK_DRIVER_TEST
-    VGA_DEFINES += -DINCLUDE_ARK_DRIVER_TEST
-  endif
-endif
-ifdef INCLUDE_ATI_DRIVER
-  VGA_DEFINES += -DINCLUDE_ATI_DRIVER
-  DRIVERS += ati.o
-  ifdef INCLUDE_ATI_DRIVER_TEST
-    VGA_DEFINES += -DINCLUDE_ATI_DRIVER_TEST
-  endif
-endif
-ifdef INCLUDE_ALI_DRIVER
-  VGA_DEFINES += -DINCLUDE_ALI_DRIVER
-  DRIVERS += ali.o
-  ifdef INCLUDE_ALI_DRIVER_TEST
-    VGA_DEFINES += -DINCLUDE_ALI_DRIVER_TEST
-  endif
-endif
-ifdef INCLUDE_MACH64_DRIVER
-  VGA_DEFINES +=-DINCLUDE_MACH64_DRIVER
-  DRIVERS += mach64.o
-  ifdef INCLUDE_MACH64_DRIVER_TEST
-    VGA_DEFINES += -DINCLUDE_MACH64_DRIVER_TEST
-  endif
-endif
-ifdef INCLUDE_CHIPS_DRIVER
-  VGA_DEFINES +=-DINCLUDE_CHIPS_DRIVER
-  DRIVERS += chips.o
-  ifdef INCLUDE_CHIPS_DRIVER_TEST
-    VGA_DEFINES += -DINCLUDE_CHIPS_DRIVER_TEST
-  endif
-endif
-ifdef INCLUDE_APM_DRIVER
-  VGA_DEFINES +=-DINCLUDE_APM_DRIVER
-  DRIVERS += apm.o
-  ifdef INCLUDE_APM_DRIVER_TEST
-    VGA_DEFINES += -DINCLUDE_APM_DRIVER_TEST
-  endif
-endif
-ifdef INCLUDE_VESA_DRIVER
-  VGA_DEFINES +=-DINCLUDE_VESA_DRIVER
-  DRIVERS += vesa.o
-  ifdef INCLUDE_VESA_DRIVER_TEST
-    VGA_DEFINES += -DINCLUDE_VESA_DRIVER_TEST
-  endif
-endif
-ifdef INCLUDE_NV3_DRIVER
-  VGA_DEFINES +=-DINCLUDE_NV3_DRIVER
-  DRIVERS += nv3.o
-  ifdef INCLUDE_NV3_DRIVER_TEST
-    VGA_DEFINES += -DINCLUDE_NV3_DRIVER_TEST
-  endif
-endif
-ifdef INCLUDE_G400_DRIVER
-  VGA_DEFINES +=-DINCLUDE_G400_DRIVER
-  DRIVERS += g400.o
-  ifdef INCLUDE_G400_DRIVER_TEST
-    VGA_DEFINES += -DINCLUDE_G400_DRIVER_TEST
-  endif
-endif
-ifdef INCLUDE_R128_DRIVER
-  VGA_DEFINES +=-DINCLUDE_R128_DRIVER
-  DRIVERS += r128.o
-  ifdef INCLUDE_R128_DRIVER_TEST
-    VGA_DEFINES += -DINCLUDE_R128_DRIVER_TEST
-  endif
-endif
-ifdef INCLUDE_MX_DRIVER
-  VGA_DEFINES +=-DINCLUDE_MX_DRIVER
-  DRIVERS += mx.o
-  ifdef INCLUDE_MX_DRIVER_TEST
-    VGA_DEFINES += -DINCLUDE_MX_DRIVER_TEST
-  endif
-endif
-ifdef INCLUDE_SAVAGE_DRIVER
-  VGA_DEFINES +=-DINCLUDE_SAVAGE_DRIVER
-  DRIVERS += savage.o
-  ifdef INCLUDE_SAVAGE_DRIVER_TEST
-    VGA_DEFINES += -DINCLUDE_SAVAGE_DRIVER_TEST
-  endif
-endif
-ifdef INCLUDE_PARADISE_DRIVER
-  VGA_DEFINES +=-DINCLUDE_PARADISE_DRIVER
-  DRIVERS += paradise.o
-  ifdef INCLUDE_PARADISE_DRIVER_TEST
-    VGA_DEFINES += -DINCLUDE_PARADISE_DRIVER_TEST
-  endif
-endif
-ifdef INCLUDE_RAGE_DRIVER
-  VGA_DEFINES +=-DINCLUDE_RAGE_DRIVER
-  DRIVERS += rage.o
-  ifdef INCLUDE_RAGE_DRIVER_TEST
-    VGA_DEFINES += -DINCLUDE_RAGE_DRIVER_TEST
-  endif
-endif
-ifdef INCLUDE_BANSHEE_DRIVER
-  VGA_DEFINES +=-DINCLUDE_BANSHEE_DRIVER
-  DRIVERS += banshee.o
-  ifdef INCLUDE_BANSHEE_DRIVER_TEST
-    VGA_DEFINES += -DINCLUDE_BANSHEE_DRIVER_TEST
-  endif
-endif
-ifdef INCLUDE_SIS_DRIVER
-  VGA_DEFINES +=-DINCLUDE_SIS_DRIVER
-  DRIVERS += sis.o
-  ifdef INCLUDE_SIS_DRIVER_TEST
-    VGA_DEFINES += -DINCLUDE_SIS_DRIVER_TEST
-  endif
-endif
-ifdef INCLUDE_I740_DRIVER
-  VGA_DEFINES +=-DINCLUDE_I740_DRIVER
-  DRIVERS += i740.o
-  ifdef INCLUDE_I740_DRIVER_TEST
-    VGA_DEFINES += -DINCLUDE_I740_DRIVER_TEST
-  endif
-endif
-ifdef INCLUDE_LAGUNA_DRIVER
-  VGA_DEFINES +=-DINCLUDE_LAGUNA_DRIVER
-  DRIVERS += laguna.o
-  ifdef INCLUDE_LAGUNA_DRIVER_TEST
-    VGA_DEFINES += -DINCLUDE_LAGUNA_DRIVER_TEST
-  endif
-endif
-ifdef INCLUDE_ET6000_DRIVER
-  VGA_DEFINES += -DINCLUDE_ET6000_DRIVER
-  DRIVERS += et6000.o
-  ifdef INCLUDE_ET6000_DRIVER_TEST
-    VGA_DEFINES += -DINCLUDE_ET6000_DRIVER_TEST
-  endif
-endif
-ifdef INCLUDE_NEO_DRIVER
-  VGA_DEFINES += -DINCLUDE_NEO_DRIVER
-  DRIVERS += neo.o
-  ifdef INCLUDE_NEO_DRIVER_TEST
-    VGA_DEFINES += -DINCLUDE_NEO_DRIVER_TEST
-  endif
-endif
-ifdef INCLUDE_FBDEV_DRIVER
-  VGA_DEFINES += -DINCLUDE_FBDEV_DRIVER
-  DRIVERS += fbdev.o
-  ifdef INCLUDE_FBDEV_DRIVER_TEST
-    VGA_DEFINES += -DINCLUDE_FBDEV_DRIVER_TEST
-  endif
-endif
-
-# DYNAMIC is used by both ET drivers.
-ifdef DYNAMIC
-  ifdef INCLUDE_ET6000_DRIVER
-    DEFINES += -DDYNAMIC
-  else
-    ifdef INCLUDE_ET4000_DRIVER
-      DEFINES += -DDYNAMIC
-    endif
-  endif
-endif
-
-# defines for ramdac.c, ramdac.h (and files including it) only.
-ifdef INCLUDE_NORMAL_DAC
-  RAMDAC_DEFINES += -DINCLUDE_NORMAL_DAC
-  ifdef INCLUDE_NORMAL_DAC_TEST
-    RAMDAC_DEFINES += -DINCLUDE_NORMAL_DAC_TEST
-  endif
-endif
-ifdef INCLUDE_S3_SDAC_DAC
-  RAMDAC_DEFINES += -DINCLUDE_S3_SDAC_DAC
-  ifdef INCLUDE_S3_SDAC_DAC_TEST
-    RAMDAC_DEFINES += -DINCLUDE_S3_SDAC_DAC_TEST
-  endif
-endif
-ifdef INCLUDE_S3_GENDAC_DAC
-  RAMDAC_DEFINES += -DINCLUDE_S3_GENDAC_DAC
-  ifdef INCLUDE_S3_GENDAC_DAC_TEST
-    RAMDAC_DEFINES += -DINCLUDE_S3_GENDAC_DAC_TEST
-  endif
-endif
-ifdef INCLUDE_S3_TRIO64_DAC
-  RAMDAC_DEFINES += -DINCLUDE_S3_TRIO64_DAC
-  ifdef INCLUDE_S3_TRIO64_DAC_TEST
-    RAMDAC_DEFINES += -DINCLUDE_S3_TRIO64_DAC_TEST
-  endif
-endif
-ifdef INCLUDE_SIERRA_DAC
-  RAMDAC_DEFINES += -DINCLUDE_SIERRA_DAC
-  ifdef INCLUDE_SIERRA_DAC_TEST
-    RAMDAC_DEFINES += -DINCLUDE_SIERRA_DAC_TEST
-  endif
-endif
-ifdef INCLUDE_SC15025_DAC
-  RAMDAC_DEFINES += -DINCLUDE_SC15025_DAC
-  ifdef INCLUDE_SC15025_DAC_TEST
-    RAMDAC_DEFINES += -DINCLUDE_SC15025_DAC_TEST
-  endif
-endif
-ifdef INCLUDE_ATT20C490_DAC
-  RAMDAC_DEFINES += -DINCLUDE_ATT20C490_DAC
-  ifdef INCLUDE_ATT20C490_DAC_TEST
-    RAMDAC_DEFINES += -DINCLUDE_ATT20C490_DAC_TEST
-  endif
-endif
-ifdef INCLUDE_ATT20C498_DAC
-  RAMDAC_DEFINES += -DINCLUDE_ATT20C498_DAC
-  ifdef INCLUDE_ATT20C498_DAC_TEST
-    RAMDAC_DEFINES += -DINCLUDE_ATT20C498_DAC_TEST
-  endif
-endif
-ifdef INCLUDE_ICW_DAC
-  RAMDAC_DEFINES += -DINCLUDE_ICW_DAC
-  ifdef INCLUDE_ICW_DAC_TEST
-    RAMDAC_DEFINES += -DINCLUDE_ICW_DAC_TEST
-  endif
-endif
-ifdef INCLUDE_IBMRGB52x_DAC
-  RAMDAC_DEFINES += -DINCLUDE_IBMRGB52x_DAC
-  ifdef INCLUDE_IBMRGB52x_DAC_TEST
-    RAMDAC_DEFINES += -DINCLUDE_IBMRGB52x_DAC_TEST
-  endif
-endif
-ifdef INCLUDE_SC1148X_DAC
-  RAMDAC_DEFINES += -DINCLUDE_SC1148X_DAC
-  ifdef INCLUDE_SC1148X_DAC_TEST
-    RAMDAC_DEFINES += -DINCLUDE_SC1148X_DAC_TEST
-  endif
-endif
-
-ALLOBJS = $(MODULES) $(MOUSE) $(JOYSTICK) $(KEYBOARD) $(RAMDAC) $(CLOCKCHIP) $(DRIVERS) $(X86EMU)
-
-.c.o:
-	$(CC) $(CFLAGS) -g -c -o $*.o $<
-
-.c.s:
-	$(CC) $(CFLAGS) -S -o $*.s $<
-
-.PHONY:	all dep depadd clean install FORCE
-
-
-
-ifeq (a.out, $(TARGET_FORMAT))
-
-all:	libvga.a
-
-else                                                               
-
-all:	libvga.so.$(VERSION)
-
-# These rules are for ELF only.
-libvga.so.$(VERSION): $(ALLOBJS)
-	$(CC) -s -shared -Wl,-soname,libvga.so.$(MAJOR_VER) \
-	  -o libvga.so.$(VERSION) $(ALLOBJS) $(SHLIBLIBS) -lm -lx86
-	ln -sf libvga.so.$(VERSION) libvga.so
-	ln -sf libvga.so.$(VERSION) libvga.so.$(MAJOR_VER)
-
-$(sharedlibdir)/libvga.so.$(VERSION): libvga.so.$(VERSION)
-	$(INSTALL_PROGRAM) $< $(sharedlibdir)/$<
-
-install: $(sharedlibdir)/libvga.so.$(VERSION)
-	cp -df sharedlib/libvga.so $(sharedlibdir)/
-	cp -df sharedlib/libvga.so.$(MAJOR_VER) $(sharedlibdir)/
-
-endif	  
-
-libvga.a: $(ALLOBJS)
-	rm -f libvga.a
-	$(AR) rcs libvga.a $(ALLOBJS)
-
-libvgagl.a: FORCE
-	make -f $(srcdir)/gl/Makefile $@ srcdir="$(srcdir)" DLLFLAGS="$(DLLFLAGS)"
-
-vga.o: vga.c
-	$(CC) $(CFLAGS) $(VGA_DEFINES) -c -o $@ $<
-
-# XXX: Upstream used this so it may break, disabled to close an RC
-# lrmi must NOT be compiled as -fPIC
-lrmi.o: lrmi.c
-	$(CC) $(CFLAGS) -c -o $@ $<
-#	$(CC) $(CFLAGS:-fPIC=) -c -o $@ $<
-
-$(RAMDAC): %.o: %.c
-	$(CC) $(CFLAGS) $(RAMDAC_DEFINES) -c -o $@ $<
-
-s3.o ark.o: %.o: %.c
-	$(CC) $(CFLAGS) $(RAMDAC_DEFINES) -c -o $@ $<
-
-nucleus.o: %.o: %.c 
-	$(CC) $(CFLAGS) $(RAMDAC_DEFINES) -c -o $@ $< scitech.o
-
-$(MODULES): .depend.src
-
-dep:
-	rm -f .depend.src
-	make .depend.src
-
-.depend.src:
-	echo '# Module dependencies' >>.depend.src
-	$(CC) $(INCLUDES) -MM $(patsubst %.o,$(srcdir)/src/%.c,$(MODULES)) >>.depend.src
-
-clean:
-	rm -f .depend.src *~ *.o mouse/*.o keyboard/*.o mouse/*~ keyboard/*~ \
-		ramdac/*.o clockchip/*.o ramdac/*~ clockchip/*~ \
-		libvga.a libvga.so.$(VERSION) *.bak */*.bak
-
-FORCE: # dummy target.
-
-#
-# include a dependency file if one exists
-#
-ifeq (.depend.src,$(wildcard .depend.src))
-include .depend.src
-endif
