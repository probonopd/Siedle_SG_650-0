From: Robert Schwebel <r.schwebel@pengutronix.de>
Subject: libmad: update autoconf

configure.ac:212: warning: The macro `AC_HELP_STRING' is obsolete.

Signed-off-by: Robert Schwebel <r.schwebel@pengutronix.de>

---
 configure.ac |   20 ++++++++++----------
 1 file changed, 10 insertions(+), 10 deletions(-)

Index: libmad-0.15.1b/configure.ac
===================================================================
--- libmad-0.15.1b.orig/configure.ac
+++ libmad-0.15.1b/configure.ac
@@ -172,7 +172,7 @@ AC_CACHE_SAVE
 
 AC_MSG_CHECKING(whether to optimize for speed or for accuracy)
 
-AC_ARG_ENABLE(speed, AC_HELP_STRING([--enable-speed],
+AC_ARG_ENABLE(speed, AS_HELP_STRING([--enable-speed],
 		     [optimize for speed over accuracy]),
 [
     case "$enableval" in
@@ -184,7 +184,7 @@ AC_ARG_ENABLE(speed, AC_HELP_STRING([--e
     esac
 ])
 
-AC_ARG_ENABLE(accuracy, AC_HELP_STRING([--enable-accuracy],
+AC_ARG_ENABLE(accuracy, AS_HELP_STRING([--enable-accuracy],
 			[optimize for accuracy over speed]),
 [
     case "$enableval" in
@@ -209,7 +209,7 @@ then
 fi
 
 AC_MSG_CHECKING(for architecture-specific fixed-point math routines)
-AC_ARG_ENABLE(fpm, AC_HELP_STRING([--enable-fpm=ARCH],
+AC_ARG_ENABLE(fpm, AS_HELP_STRING([--enable-fpm=ARCH],
 		   [use ARCH-specific fixed-point math routines
 		    (one of: intel, arm, mips, sparc, ppc, 64bit, default)]),
 [
@@ -252,7 +252,7 @@ fi
 
 FPM="-DFPM_$FPM"
 
-AC_ARG_ENABLE(sso, AC_HELP_STRING([--enable-sso],
+AC_ARG_ENABLE(sso, AS_HELP_STRING([--enable-sso],
 		   [use subband synthesis optimization]),
 [
     case "$enableval" in
@@ -263,7 +263,7 @@ AC_ARG_ENABLE(sso, AC_HELP_STRING([--ena
     esac
 ])
 
-AC_ARG_ENABLE(aso, AC_HELP_STRING([--disable-aso],
+AC_ARG_ENABLE(aso, AS_HELP_STRING([--disable-aso],
 		   [disable architecture-specific optimizations]),
     [], [enable_aso=yes])
 
@@ -289,7 +289,7 @@ then
 fi
 
 AC_MSG_CHECKING(for ISO/IEC interpretation)
-AC_ARG_ENABLE(strict-iso, AC_HELP_STRING([--enable-strict-iso],
+AC_ARG_ENABLE(strict-iso, AS_HELP_STRING([--enable-strict-iso],
 			  [use strict ISO/IEC interpretations]),
 [
     case "$enableval" in
@@ -304,7 +304,7 @@ AC_ARG_ENABLE(strict-iso, AC_HELP_STRING
 AC_MSG_RESULT(${interpretation-best accepted practices})
 
 AC_MSG_CHECKING(whether to enable profiling)
-AC_ARG_ENABLE(profiling, AC_HELP_STRING([--enable-profiling],
+AC_ARG_ENABLE(profiling, AS_HELP_STRING([--enable-profiling],
 			 [generate profiling code]),
 [
     case "$enableval" in
@@ -314,9 +314,9 @@ AC_ARG_ENABLE(profiling, AC_HELP_STRING(
 AC_MSG_RESULT(${enable_profiling-no})
 
 AC_MSG_CHECKING(whether to enable debugging)
-AC_ARG_ENABLE(debugging, AC_HELP_STRING([--enable-debugging],
+AC_ARG_ENABLE(debugging, AS_HELP_STRING([--enable-debugging],
 			 [enable diagnostic debugging support])
-AC_HELP_STRING([--disable-debugging],
+AS_HELP_STRING([--disable-debugging],
 	       [do not enable debugging and use more optimization]),
 [
     case "$enableval" in
@@ -344,7 +344,7 @@ AC_HELP_STRING([--disable-debugging],
 AC_MSG_RESULT(${enable_debugging-default})
 
 AC_MSG_CHECKING(whether to enable experimental code)
-AC_ARG_ENABLE(experimental, AC_HELP_STRING([--enable-experimental],
+AC_ARG_ENABLE(experimental, AS_HELP_STRING([--enable-experimental],
 			    [enable experimental code]),
 [
     case "$enableval" in
